"""All the irreps for the I=1 moving frames"""
## I=1 moving frames

## p1 == A1^+ \circleplus B
import sys
from math import sqrt
import numpy as np
from latfit.utilities import read_file as rf
from latfit.utilities import exactmean as em
import latfit.utilities.rho_pol_coeffs as rho

CURRENT_MODULE = sys.modules[__name__]
CMOD = CURRENT_MODULE


A_1PLUS_mom_100 = [
    (-1.0, 'S_pipi', [[-1, 0, 0], [0, 0, 0]]),
]

A_1PLUS_mom010 = [
    (-1.0, 'S_pipi', [[0, 1, 0], [0, 0, 0]]),
]

A_1PLUS_mom00_1 = [
    (-1.0, 'S_pipi', [[0, 0, -1], [0, 0, 0]]),
]

A_1PLUS_mom100 = [
    (-1.0, 'S_pipi', [[1, 0, 0], [0, 0, 0]]),
]

A_1PLUS_mom0_10 = [
    (-1.0, 'S_pipi', [[0, -1, 0], [0, 0, 0]]),
]

A_1PLUS_mom001 = [
    (-1.0, 'S_pipi', [[0, 0, 1], [0, 0, 0]]),
]

A_1PLUS_mom_100 += [
    (-0.5, 'pipi', [[-1, -1, 0], [0, 1, 0]]),
    (-0.5, 'pipi', [[-1, 0, -1], [0, 0, 1]]),
    (-0.5, 'pipi', [[-1, 0, 1], [0, 0, -1]]),
    (-0.5, 'pipi', [[-1, 1, 0], [0, -1, 0]]),
]

A_1PLUS_mom010 += [
    (-0.5, 'pipi', [[-1, 1, 0], [1, 0, 0]]),
    (-0.5, 'pipi', [[0, 1, -1], [0, 0, 1]]),
    (-0.5, 'pipi', [[0, 1, 1], [0, 0, -1]]),
    (-0.5, 'pipi', [[1, 1, 0], [-1, 0, 0]]),
]

A_1PLUS_mom00_1 += [
    (-0.5, 'pipi', [[-1, 0, -1], [1, 0, 0]]),
    (-0.5, 'pipi', [[0, -1, -1], [0, 1, 0]]),
    (-0.5, 'pipi', [[0, 1, -1], [0, -1, 0]]),
    (-0.5, 'pipi', [[1, 0, -1], [-1, 0, 0]]),
]

A_1PLUS_mom100 += [
    (-0.5, 'pipi', [[1, -1, 0], [0, 1, 0]]),
    (-0.5, 'pipi', [[1, 0, -1], [0, 0, 1]]),
    (-0.5, 'pipi', [[1, 0, 1], [0, 0, -1]]),
    (-0.5, 'pipi', [[1, 1, 0], [0, -1, 0]]),
]

A_1PLUS_mom0_10 += [
    (-0.5, 'pipi', [[-1, -1, 0], [1, 0, 0]]),
    (-0.5, 'pipi', [[0, -1, -1], [0, 0, 1]]),
    (-0.5, 'pipi', [[0, -1, 1], [0, 0, -1]]),
    (-0.5, 'pipi', [[1, -1, 0], [-1, 0, 0]]),
]

A_1PLUS_mom001 += [
    (-0.5, 'pipi', [[-1, 0, 1], [1, 0, 0]]),
    (-0.5, 'pipi', [[0, -1, 1], [0, 1, 0]]),
    (-0.5, 'pipi', [[0, 1, 1], [0, -1, 0]]),
    (-0.5, 'pipi', [[1, 0, 1], [-1, 0, 0]]),
]

A_1PLUS_mom_100 += [
    (-0.5, 'UUpipi', [[-1, -1, -1], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[-1, -1, 1], [0, 1, -1]]),
    (-0.5, 'UUpipi', [[-1, 1, -1], [0, -1, 1]]),
    (-0.5, 'UUpipi', [[-1, 1, 1], [0, -1, -1]]),
]

A_1PLUS_mom010 += [
    (-0.5, 'UUpipi', [[-1, 1, -1], [1, 0, 1]]),
    (-0.5, 'UUpipi', [[-1, 1, 1], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[1, 1, -1], [-1, 0, 1]]),
    (-0.5, 'UUpipi', [[1, 1, 1], [-1, 0, -1]]),
]

A_1PLUS_mom00_1 += [
    (-0.5, 'UUpipi', [[-1, -1, -1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[-1, 1, -1], [1, -1, 0]]),
    (-0.5, 'UUpipi', [[1, -1, -1], [-1, 1, 0]]),
    (-0.5, 'UUpipi', [[1, 1, -1], [-1, -1, 0]]),
]

A_1PLUS_mom100 += [
    (-0.5, 'UUpipi', [[1, -1, -1], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[1, -1, 1], [0, 1, -1]]),
    (-0.5, 'UUpipi', [[1, 1, -1], [0, -1, 1]]),
    (-0.5, 'UUpipi', [[1, 1, 1], [0, -1, -1]]),
]

A_1PLUS_mom0_10 += [
    (-0.5, 'UUpipi', [[-1, -1, -1], [1, 0, 1]]),
    (-0.5, 'UUpipi', [[-1, -1, 1], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[1, -1, -1], [-1, 0, 1]]),
    (-0.5, 'UUpipi', [[1, -1, 1], [-1, 0, -1]]),
]

A_1PLUS_mom001 += [
    (-0.5, 'UUpipi', [[-1, -1, 1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[-1, 1, 1], [1, -1, 0]]),
    (-0.5, 'UUpipi', [[1, -1, 1], [-1, 1, 0]]),
    (-0.5, 'UUpipi', [[1, 1, 1], [-1, -1, 0]]),
]




B_0_mom00_1 = [
    (-0.5, 'UUpipi', [[-1, 1, -1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, -1], [-1, 1, 0]]),
]

B_0_mom_100 = [
    (-0.5, 'UUpipi', [[-1, -1, -1], [0, 1, 1]]),
    (0.5, 'UUpipi', [[-1, 1, 1], [0, -1, -1]]),
]

B_1_mom_100 = [
    (0.5, 'UUpipi', [[-1, -1, 1], [0, 1, -1]]),
    (-0.5, 'UUpipi', [[-1, 1, -1], [0, -1, 1]]),
]

B_1_mom100 = [
    (0.5, 'UUpipi', [[1, -1, -1], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[1, 1, 1], [0, -1, -1]]),
]

B_0_mom0_10 = [
    (-0.5, 'UUpipi', [[-1, -1, -1], [1, 0, 1]]),
    (0.5, 'UUpipi', [[1, -1, 1], [-1, 0, -1]]),
]

B_0_mom010 = [
    (-0.5, 'UUpipi', [[-1, 1, 1], [1, 0, -1]]),
    (0.5, 'UUpipi', [[1, 1, -1], [-1, 0, 1]]),
]

B_1_mom010 = [
    (-0.5, 'UUpipi', [[-1, 1, -1], [1, 0, 1]]),
    (0.5, 'UUpipi', [[1, 1, 1], [-1, 0, -1]]),
]

B_0_mom001 = [
    (-0.5, 'UUpipi', [[-1, -1, 1], [1, 1, 0]]),
    (0.5, 'UUpipi', [[1, 1, 1], [-1, -1, 0]]),
]

B_1_mom001 = [
    (-0.5, 'UUpipi', [[-1, 1, 1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 1], [-1, 1, 0]]),
]

B_1_mom0_10 = [
    (-0.5, 'UUpipi', [[-1, -1, 1], [1, 0, -1]]),
    (0.5, 'UUpipi', [[1, -1, -1], [-1, 0, 1]]),
]

B_0_mom100 = [
    (-0.5, 'UUpipi', [[1, -1, 1], [0, 1, -1]]),
    (0.5, 'UUpipi', [[1, 1, -1], [0, -1, 1]]),
]

B_1_mom00_1 = [
    (-0.5, 'UUpipi', [[-1, -1, -1], [1, 1, 0]]),
    (0.5, 'UUpipi', [[1, 1, -1], [-1, -1, 0]]),
]


B_0_mom00_1 += [
    (-0.5, 'pipi', [[-1, 0, -1], [1, 0, 0]]),
    (0.5, 'pipi', [[1, 0, -1], [-1, 0, 0]]),
]

B_0_mom_100 += [
    (-0.5, 'pipi', [[-1, 0, -1], [0, 0, 1]]),
    (0.5, 'pipi', [[-1, 0, 1], [0, 0, -1]]),
]

B_1_mom_100 += [
    (-0.5, 'pipi', [[-1, 0, -1], [0, 0, 1]]),
    (0.5, 'pipi', [[-1, 0, 1], [0, 0, -1]]),
]

B_1_mom100 += [
    (0.5, 'pipi', [[1, 0, -1], [0, 0, 1]]),
    (-0.5, 'pipi', [[1, 0, 1], [0, 0, -1]]),
]

B_0_mom0_10 += [
    (-0.5, 'pipi', [[-1, -1, 0], [1, 0, 0]]),
    (0.5, 'pipi', [[1, -1, 0], [-1, 0, 0]]),
]

B_0_mom010 += [
    (-0.5, 'pipi', [[-1, 1, 0], [1, 0, 0]]),
    (0.5, 'pipi', [[1, 1, 0], [-1, 0, 0]]),
]

B_1_mom010 += [
    (-0.5, 'pipi', [[-1, 1, 0], [1, 0, 0]]),
    (0.5, 'pipi', [[1, 1, 0], [-1, 0, 0]]),
]

B_0_mom001 += [
    (-0.5, 'pipi', [[-1, 0, 1], [1, 0, 0]]),
    (0.5, 'pipi', [[1, 0, 1], [-1, 0, 0]]),
]

B_1_mom001 += [
    (-0.5, 'pipi', [[-1, 0, 1], [1, 0, 0]]),
    (0.5, 'pipi', [[1, 0, 1], [-1, 0, 0]]),
]

B_1_mom0_10 += [
    (-0.5, 'pipi', [[-1, -1, 0], [1, 0, 0]]),
    (0.5, 'pipi', [[1, -1, 0], [-1, 0, 0]]),
]

B_0_mom100 += [
    (0.5, 'pipi', [[1, 0, -1], [0, 0, 1]]),
    (-0.5, 'pipi', [[1, 0, 1], [0, 0, -1]]),
]

B_1_mom00_1 += [
    (-0.5, 'pipi', [[-1, 0, -1], [1, 0, 0]]),
    (0.5, 'pipi', [[1, 0, -1], [-1, 0, 0]]),
]


## p11 == A1^+ (12) \circleplus A2^ + \circleplus A2^-

A_1PLUS_mom0_1_1 = [
    (-1.0, 'S_pipi', [[0, -1, -1], [0, 0, 0]]),
]

A_1PLUS_mom01_1 = [
    (-1.0, 'S_pipi', [[0, 1, -1], [0, 0, 0]]),
]

A_1PLUS_mom_101 = [
    (-1.0, 'S_pipi', [[-1, 0, 1], [0, 0, 0]]),
]

A_1PLUS_mom011 = [
    (-1.0, 'S_pipi', [[0, 1, 1], [0, 0, 0]]),
]

A_1PLUS_mom10_1 = [
    (-1.0, 'S_pipi', [[1, 0, -1], [0, 0, 0]]),
]

A_1PLUS_mom101 = [
    (-1.0, 'S_pipi', [[1, 0, 1], [0, 0, 0]]),
]

A_1PLUS_mom1_10 = [
    (-1.0, 'S_pipi', [[1, -1, 0], [0, 0, 0]]),
]

A_1PLUS_mom_10_1 = [
    (-1.0, 'S_pipi', [[-1, 0, -1], [0, 0, 0]]),
]

A_1PLUS_mom110 = [
    (-1.0, 'S_pipi', [[1, 1, 0], [0, 0, 0]]),
]

A_1PLUS_mom0_11 = [
    (-1.0, 'S_pipi', [[0, -1, 1], [0, 0, 0]]),
]

A_1PLUS_mom_1_10 = [
    (-1.0, 'S_pipi', [[-1, -1, 0], [0, 0, 0]]),
]

A_1PLUS_mom_110 = [
    (-1.0, 'S_pipi', [[-1, 1, 0], [0, 0, 0]]),
]


A_1PLUS_mom_1_10 += [
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [-1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[-1, 0, 0], [0, -1, 0]]),
]

A_1PLUS_mom0_1_1 += [
    (-1/sqrt(2), 'pipi', [[0, 0, -1], [0, -1, 0]]),
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [0, 0, -1]]),
]

A_1PLUS_mom1_10 += [
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, -1, 0]]),
]

A_1PLUS_mom10_1 += [
    (-1/sqrt(2), 'pipi', [[0, 0, -1], [1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, 0, -1]]),
]

A_1PLUS_mom0_11 += [
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [0, 0, 1]]),
    (-1/sqrt(2), 'pipi', [[0, 0, 1], [0, -1, 0]]),
]

A_1PLUS_mom_110 += [
    (-1/sqrt(2), 'pipi', [[-1, 0, 0], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[0, 1, 0], [-1, 0, 0]]),
]

A_1PLUS_mom01_1 += [
    (-1/sqrt(2), 'pipi', [[0, 0, -1], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[0, 1, 0], [0, 0, -1]]),
]

A_1PLUS_mom011 += [
    (-1/sqrt(2), 'pipi', [[0, 1, 0], [0, 0, 1]]),
    (-1/sqrt(2), 'pipi', [[0, 0, 1], [0, 1, 0]]),
]

A_1PLUS_mom_101 += [
    (-1/sqrt(2), 'pipi', [[-1, 0, 0], [0, 0, 1]]),
    (-1/sqrt(2), 'pipi', [[0, 0, 1], [-1, 0, 0]]),
]

A_1PLUS_mom110 += [
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[0, 1, 0], [1, 0, 0]]),
]

A_1PLUS_mom_10_1 += [
    (-1/sqrt(2), 'pipi', [[0, 0, -1], [-1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[-1, 0, 0], [0, 0, -1]]),
]

A_1PLUS_mom101 += [
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, 0, 1]]),
    (-1/sqrt(2), 'pipi', [[0, 0, 1], [1, 0, 0]]),
]

A_2PLUS_mom_1_10 = [
    (1/sqrt(2), 'pipi', [[0, -1, 0], [-1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[-1, 0, 0], [0, -1, 0]]),
]

A_2PLUS_mom10_1 = [
    (1/sqrt(2), 'pipi', [[0, 0, -1], [1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, 0, -1]]),
]

A_2PLUS_mom_101 = [
    (1/sqrt(2), 'pipi', [[-1, 0, 0], [0, 0, 1]]),
    (-1/sqrt(2), 'pipi', [[0, 0, 1], [-1, 0, 0]]),
]

A_2PLUS_mom110 = [
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, 1, 0]]),
    (1/sqrt(2), 'pipi', [[0, 1, 0], [1, 0, 0]]),
]

A_2PLUS_mom0_11 = [
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[0, 0, 1], [0, -1, 0]]),
]

A_2PLUS_mom01_1 = [
    (-1/sqrt(2), 'pipi', [[0, 0, -1], [0, 1, 0]]),
    (1/sqrt(2), 'pipi', [[0, 1, 0], [0, 0, -1]]),
]

A_2PLUS_mom0_1_1 = [
    (1/sqrt(2), 'pipi', [[0, 0, -1], [0, -1, 0]]),
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [0, 0, -1]]),
]

A_2PLUS_mom_110 = [
    (1/sqrt(2), 'pipi', [[-1, 0, 0], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[0, 1, 0], [-1, 0, 0]]),
]

A_2PLUS_mom101 = [
    (-1/sqrt(2), 'pipi', [[1, 0, 0], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[0, 0, 1], [1, 0, 0]]),
]

A_2PLUS_mom1_10 = [
    (-1/sqrt(2), 'pipi', [[0, -1, 0], [1, 0, 0]]),
    (1/sqrt(2), 'pipi', [[1, 0, 0], [0, -1, 0]]),
]

A_2PLUS_mom_10_1 = [
    (-1/sqrt(2), 'pipi', [[0, 0, -1], [-1, 0, 0]]),
    (1/sqrt(2), 'pipi', [[-1, 0, 0], [0, 0, -1]]),
]

A_2PLUS_mom011 = [
    (1/sqrt(2), 'pipi', [[0, 1, 0], [0, 0, 1]]),
    (-1/sqrt(2), 'pipi', [[0, 0, 1], [0, 1, 0]]),
]

A_1PLUS_mom0_1_1 += [
    (-1/sqrt(2), 'UUpipi', [[-1, -1, -1], [1, 0, 0]]),
    (-1/sqrt(2), 'UUpipi', [[1, -1, -1], [-1, 0, 0]]),
]

A_1PLUS_mom01_1 += [
    (-1/sqrt(2), 'UUpipi', [[-1, 1, -1], [1, 0, 0]]),
    (-1/sqrt(2), 'UUpipi', [[1, 1, -1], [-1, 0, 0]]),
]

A_1PLUS_mom_101 += [
    (-1/sqrt(2), 'UUpipi', [[-1, -1, 1], [0, 1, 0]]),
    (-1/sqrt(2), 'UUpipi', [[-1, 1, 1], [0, -1, 0]]),
]

A_1PLUS_mom011 += [
    (-1/sqrt(2), 'UUpipi', [[-1, 1, 1], [1, 0, 0]]),
    (-1/sqrt(2), 'UUpipi', [[1, 1, 1], [-1, 0, 0]]),
]

A_1PLUS_mom10_1 += [
    (-1/sqrt(2), 'UUpipi', [[1, -1, -1], [0, 1, 0]]),
    (-1/sqrt(2), 'UUpipi', [[1, 1, -1], [0, -1, 0]]),
]

A_1PLUS_mom101 += [
    (-1/sqrt(2), 'UUpipi', [[1, -1, 1], [0, 1, 0]]),
    (-1/sqrt(2), 'UUpipi', [[1, 1, 1], [0, -1, 0]]),
]

A_1PLUS_mom1_10 += [
    (-1/sqrt(2), 'UUpipi', [[1, -1, -1], [0, 0, 1]]),
    (-1/sqrt(2), 'UUpipi', [[1, -1, 1], [0, 0, -1]]),
]

A_1PLUS_mom_10_1 += [
    (-1/sqrt(2), 'UUpipi', [[-1, -1, -1], [0, 1, 0]]),
    (-1/sqrt(2), 'UUpipi', [[-1, 1, -1], [0, -1, 0]]),
]

A_1PLUS_mom110 += [
    (-1/sqrt(2), 'UUpipi', [[1, 1, -1], [0, 0, 1]]),
    (-1/sqrt(2), 'UUpipi', [[1, 1, 1], [0, 0, -1]]),
]

A_1PLUS_mom0_11 += [
    (-1/sqrt(2), 'UUpipi', [[-1, -1, 1], [1, 0, 0]]),
    (-1/sqrt(2), 'UUpipi', [[1, -1, 1], [-1, 0, 0]]),
]

A_1PLUS_mom_1_10 += [
    (-1/sqrt(2), 'UUpipi', [[-1, -1, -1], [0, 0, 1]]),
    (-1/sqrt(2), 'UUpipi', [[-1, -1, 1], [0, 0, -1]]),
]

A_1PLUS_mom_110 += [
    (-1/sqrt(2), 'UUpipi', [[-1, 1, -1], [0, 0, 1]]),
    (-1/sqrt(2), 'UUpipi', [[-1, 1, 1], [0, 0, -1]]),
]

A_2MINUS_mom_110 = [
    (-1/sqrt(2), 'pipi', [[-1, 1, -1], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[-1, 1, 1], [0, 0, -1]]),
]

A_2MINUS_mom0_1_1 = [
    (-1/sqrt(2), 'pipi', [[-1, -1, -1], [1, 0, 0]]),
    (1/sqrt(2), 'pipi', [[1, -1, -1], [-1, 0, 0]]),
]

A_2MINUS_mom_1_10 = [
    (-1/sqrt(2), 'pipi', [[-1, -1, -1], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[-1, -1, 1], [0, 0, -1]]),
]

A_2MINUS_mom110 = [
    (-1/sqrt(2), 'pipi', [[1, 1, -1], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[1, 1, 1], [0, 0, -1]]),
]

A_2MINUS_mom10_1 = [
    (-1/sqrt(2), 'pipi', [[1, -1, -1], [0, 1, 0]]),
    (1/sqrt(2), 'pipi', [[1, 1, -1], [0, -1, 0]]),
]

A_2MINUS_mom1_10 = [
    (-1/sqrt(2), 'pipi', [[1, -1, -1], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[1, -1, 1], [0, 0, -1]]),
]

A_2MINUS_mom0_11 = [
    (1/sqrt(2), 'pipi', [[-1, -1, 1], [1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[1, -1, 1], [-1, 0, 0]]),
]

A_2MINUS_mom101 = [
    (1/sqrt(2), 'pipi', [[1, -1, 1], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[1, 1, 1], [0, -1, 0]]),
]

A_2MINUS_mom01_1 = [
    (-1/sqrt(2), 'pipi', [[-1, 1, -1], [1, 0, 0]]),
    (1/sqrt(2), 'pipi', [[1, 1, -1], [-1, 0, 0]]),
]

A_2MINUS_mom_10_1 = [
    (-1/sqrt(2), 'pipi', [[-1, -1, -1], [0, 1, 0]]),
    (1/sqrt(2), 'pipi', [[-1, 1, -1], [0, -1, 0]]),
]

A_2MINUS_mom_101 = [
    (1/sqrt(2), 'pipi', [[-1, -1, 1], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[-1, 1, 1], [0, -1, 0]]),
]

A_2MINUS_mom011 = [
    (1/sqrt(2), 'pipi', [[-1, 1, 1], [1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[1, 1, 1], [-1, 0, 0]]),
]




A_1PLUS_mom_101 += [
    (-0.5, 'U2pipi', [[-1, -1, 0], [0, 1, 1]]),
    (-0.5, 'U2pipi', [[-1, 1, 0], [0, -1, 1]]),
    (-0.5, 'U2pipi', [[0, -1, 1], [-1, 1, 0]]),
    (-0.5, 'U2pipi', [[0, 1, 1], [-1, -1, 0]]),
]

A_1PLUS_mom1_10 += [
    (-0.5, 'U2pipi', [[0, -1, -1], [1, 0, 1]]),
    (-0.5, 'U2pipi', [[0, -1, 1], [1, 0, -1]]),
    (-0.5, 'U2pipi', [[1, 0, -1], [0, -1, 1]]),
    (-0.5, 'U2pipi', [[1, 0, 1], [0, -1, -1]]),
]

A_1PLUS_mom_10_1 += [
    (-0.5, 'U2pipi', [[-1, -1, 0], [0, 1, -1]]),
    (-0.5, 'U2pipi', [[-1, 1, 0], [0, -1, -1]]),
    (-0.5, 'U2pipi', [[0, -1, -1], [-1, 1, 0]]),
    (-0.5, 'U2pipi', [[0, 1, -1], [-1, -1, 0]]),
]

A_1PLUS_mom_1_10 += [
    (-0.5, 'U2pipi', [[-1, 0, -1], [0, -1, 1]]),
    (-0.5, 'U2pipi', [[-1, 0, 1], [0, -1, -1]]),
    (-0.5, 'U2pipi', [[0, -1, -1], [-1, 0, 1]]),
    (-0.5, 'U2pipi', [[0, -1, 1], [-1, 0, -1]]),
]

A_1PLUS_mom01_1 += [
    (-0.5, 'U2pipi', [[-1, 0, -1], [1, 1, 0]]),
    (-0.5, 'U2pipi', [[-1, 1, 0], [1, 0, -1]]),
    (-0.5, 'U2pipi', [[1, 0, -1], [-1, 1, 0]]),
    (-0.5, 'U2pipi', [[1, 1, 0], [-1, 0, -1]]),
]

A_1PLUS_mom110 += [
    (-0.5, 'U2pipi', [[0, 1, -1], [1, 0, 1]]),
    (-0.5, 'U2pipi', [[0, 1, 1], [1, 0, -1]]),
    (-0.5, 'U2pipi', [[1, 0, -1], [0, 1, 1]]),
    (-0.5, 'U2pipi', [[1, 0, 1], [0, 1, -1]]),
]

A_1PLUS_mom101 += [
    (-0.5, 'U2pipi', [[0, -1, 1], [1, 1, 0]]),
    (-0.5, 'U2pipi', [[0, 1, 1], [1, -1, 0]]),
    (-0.5, 'U2pipi', [[1, -1, 0], [0, 1, 1]]),
    (-0.5, 'U2pipi', [[1, 1, 0], [0, -1, 1]]),
]

A_1PLUS_mom_110 += [
    (-0.5, 'U2pipi', [[-1, 0, -1], [0, 1, 1]]),
    (-0.5, 'U2pipi', [[-1, 0, 1], [0, 1, -1]]),
    (-0.5, 'U2pipi', [[0, 1, -1], [-1, 0, 1]]),
    (-0.5, 'U2pipi', [[0, 1, 1], [-1, 0, -1]]),
]

A_1PLUS_mom0_11 += [
    (-0.5, 'U2pipi', [[-1, -1, 0], [1, 0, 1]]),
    (-0.5, 'U2pipi', [[-1, 0, 1], [1, -1, 0]]),
    (-0.5, 'U2pipi', [[1, -1, 0], [-1, 0, 1]]),
    (-0.5, 'U2pipi', [[1, 0, 1], [-1, -1, 0]]),
]

A_1PLUS_mom011 += [
    (-0.5, 'U2pipi', [[-1, 0, 1], [1, 1, 0]]),
    (-0.5, 'U2pipi', [[-1, 1, 0], [1, 0, 1]]),
    (-0.5, 'U2pipi', [[1, 0, 1], [-1, 1, 0]]),
    (-0.5, 'U2pipi', [[1, 1, 0], [-1, 0, 1]]),
]

A_1PLUS_mom10_1 += [
    (-0.5, 'U2pipi', [[0, -1, -1], [1, 1, 0]]),
    (-0.5, 'U2pipi', [[0, 1, -1], [1, -1, 0]]),
    (-0.5, 'U2pipi', [[1, -1, 0], [0, 1, -1]]),
    (-0.5, 'U2pipi', [[1, 1, 0], [0, -1, -1]]),
]

A_1PLUS_mom0_1_1 += [
    (-0.5, 'U2pipi', [[-1, -1, 0], [1, 0, -1]]),
    (-0.5, 'U2pipi', [[-1, 0, -1], [1, -1, 0]]),
    (-0.5, 'U2pipi', [[1, -1, 0], [-1, 0, -1]]),
    (-0.5, 'U2pipi', [[1, 0, -1], [-1, -1, 0]]),
]

A_2MINUS_mom_10_1 += [
    (-0.5, 'UUpipi', [[-1, -1, 0], [0, 1, -1]]),
    (0.5, 'UUpipi', [[-1, 1, 0], [0, -1, -1]]),
    (-0.5, 'UUpipi', [[0, -1, -1], [-1, 1, 0]]),
    (0.5, 'UUpipi', [[0, 1, -1], [-1, -1, 0]]),
]

A_2MINUS_mom01_1 += [
    (-0.5, 'UUpipi', [[-1, 0, -1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[-1, 1, 0], [1, 0, -1]]),
    (0.5, 'UUpipi', [[1, 0, -1], [-1, 1, 0]]),
    (0.5, 'UUpipi', [[1, 1, 0], [-1, 0, -1]]),
]

A_2MINUS_mom110 += [
    (-0.5, 'UUpipi', [[0, 1, -1], [1, 0, 1]]),
    (0.5, 'UUpipi', [[0, 1, 1], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[1, 0, -1], [0, 1, 1]]),
    (0.5, 'UUpipi', [[1, 0, 1], [0, 1, -1]]),
]

A_2MINUS_mom0_1_1 += [
    (-0.5, 'UUpipi', [[-1, -1, 0], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[-1, 0, -1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 0], [-1, 0, -1]]),
    (0.5, 'UUpipi', [[1, 0, -1], [-1, -1, 0]]),
]

A_2MINUS_mom011 += [
    (0.5, 'UUpipi', [[-1, 0, 1], [1, 1, 0]]),
    (0.5, 'UUpipi', [[-1, 1, 0], [1, 0, 1]]),
    (-0.5, 'UUpipi', [[1, 0, 1], [-1, 1, 0]]),
    (-0.5, 'UUpipi', [[1, 1, 0], [-1, 0, 1]]),
]

A_2MINUS_mom_1_10 += [
    (-0.5, 'UUpipi', [[-1, 0, -1], [0, -1, 1]]),
    (0.5, 'UUpipi', [[-1, 0, 1], [0, -1, -1]]),
    (-0.5, 'UUpipi', [[0, -1, -1], [-1, 0, 1]]),
    (0.5, 'UUpipi', [[0, -1, 1], [-1, 0, -1]]),
]

A_2MINUS_mom101 += [
    (0.5, 'UUpipi', [[0, -1, 1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[0, 1, 1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 0], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[1, 1, 0], [0, -1, 1]]),
]

A_2MINUS_mom0_11 += [
    (0.5, 'UUpipi', [[-1, -1, 0], [1, 0, 1]]),
    (0.5, 'UUpipi', [[-1, 0, 1], [1, -1, 0]]),
    (-0.5, 'UUpipi', [[1, -1, 0], [-1, 0, 1]]),
    (-0.5, 'UUpipi', [[1, 0, 1], [-1, -1, 0]]),
]

A_2MINUS_mom1_10 += [
    (-0.5, 'UUpipi', [[0, -1, -1], [1, 0, 1]]),
    (0.5, 'UUpipi', [[0, -1, 1], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[1, 0, -1], [0, -1, 1]]),
    (0.5, 'UUpipi', [[1, 0, 1], [0, -1, -1]]),
]

A_2MINUS_mom_110 += [
    (-0.5, 'UUpipi', [[-1, 0, -1], [0, 1, 1]]),
    (0.5, 'UUpipi', [[-1, 0, 1], [0, 1, -1]]),
    (-0.5, 'UUpipi', [[0, 1, -1], [-1, 0, 1]]),
    (0.5, 'UUpipi', [[0, 1, 1], [-1, 0, -1]]),
]

A_2MINUS_mom_101 += [
    (0.5, 'UUpipi', [[-1, -1, 0], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[-1, 1, 0], [0, -1, 1]]),
    (0.5, 'UUpipi', [[0, -1, 1], [-1, 1, 0]]),
    (-0.5, 'UUpipi', [[0, 1, 1], [-1, -1, 0]]),
]

A_2MINUS_mom10_1 += [
    (-0.5, 'UUpipi', [[0, -1, -1], [1, 1, 0]]),
    (0.5, 'UUpipi', [[0, 1, -1], [1, -1, 0]]),
    (-0.5, 'UUpipi', [[1, -1, 0], [0, 1, -1]]),
    (0.5, 'UUpipi', [[1, 1, 0], [0, -1, -1]]),
]


A_2PLUS_mom0_11 += [
    (0.5, 'UUpipi', [[-1, -1, 0], [1, 0, 1]]),
    (-0.5, 'UUpipi', [[-1, 0, 1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 0], [-1, 0, 1]]),
    (-0.5, 'UUpipi', [[1, 0, 1], [-1, -1, 0]]),
]

A_2PLUS_mom1_10 += [
    (0.5, 'UUpipi', [[0, -1, -1], [1, 0, 1]]),
    (0.5, 'UUpipi', [[0, -1, 1], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[1, 0, -1], [0, -1, 1]]),
    (-0.5, 'UUpipi', [[1, 0, 1], [0, -1, -1]]),
]

A_2PLUS_mom011 += [
    (0.5, 'UUpipi', [[-1, 0, 1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[-1, 1, 0], [1, 0, 1]]),
    (0.5, 'UUpipi', [[1, 0, 1], [-1, 1, 0]]),
    (-0.5, 'UUpipi', [[1, 1, 0], [-1, 0, 1]]),
]

A_2PLUS_mom101 += [
    (-0.5, 'UUpipi', [[0, -1, 1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[0, 1, 1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 0], [0, 1, 1]]),
    (0.5, 'UUpipi', [[1, 1, 0], [0, -1, 1]]),
]

A_2PLUS_mom_1_10 += [
    (0.5, 'UUpipi', [[-1, 0, -1], [0, -1, 1]]),
    (0.5, 'UUpipi', [[-1, 0, 1], [0, -1, -1]]),
    (-0.5, 'UUpipi', [[0, -1, -1], [-1, 0, 1]]),
    (-0.5, 'UUpipi', [[0, -1, 1], [-1, 0, -1]]),
]

A_2PLUS_mom110 += [
    (-0.5, 'UUpipi', [[0, 1, -1], [1, 0, 1]]),
    (-0.5, 'UUpipi', [[0, 1, 1], [1, 0, -1]]),
    (0.5, 'UUpipi', [[1, 0, -1], [0, 1, 1]]),
    (0.5, 'UUpipi', [[1, 0, 1], [0, 1, -1]]),
]

A_2PLUS_mom0_1_1 += [
    (0.5, 'UUpipi', [[-1, -1, 0], [1, 0, -1]]),
    (-0.5, 'UUpipi', [[-1, 0, -1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 0], [-1, 0, -1]]),
    (-0.5, 'UUpipi', [[1, 0, -1], [-1, -1, 0]]),
]

A_2PLUS_mom10_1 += [
    (-0.5, 'UUpipi', [[0, -1, -1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[0, 1, -1], [1, -1, 0]]),
    (0.5, 'UUpipi', [[1, -1, 0], [0, 1, -1]]),
    (0.5, 'UUpipi', [[1, 1, 0], [0, -1, -1]]),
]

A_2PLUS_mom_101 += [
    (-0.5, 'UUpipi', [[-1, -1, 0], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[-1, 1, 0], [0, -1, 1]]),
    (0.5, 'UUpipi', [[0, -1, 1], [-1, 1, 0]]),
    (0.5, 'UUpipi', [[0, 1, 1], [-1, -1, 0]]),
]

A_2PLUS_mom01_1 += [
    (0.5, 'UUpipi', [[-1, 0, -1], [1, 1, 0]]),
    (-0.5, 'UUpipi', [[-1, 1, 0], [1, 0, -1]]),
    (0.5, 'UUpipi', [[1, 0, -1], [-1, 1, 0]]),
    (-0.5, 'UUpipi', [[1, 1, 0], [-1, 0, -1]]),
]

A_2PLUS_mom_10_1 += [
    (-0.5, 'UUpipi', [[-1, -1, 0], [0, 1, -1]]),
    (-0.5, 'UUpipi', [[-1, 1, 0], [0, -1, -1]]),
    (0.5, 'UUpipi', [[0, -1, -1], [-1, 1, 0]]),
    (0.5, 'UUpipi', [[0, 1, -1], [-1, -1, 0]]),
]

A_2PLUS_mom_110 += [
    (-0.5, 'UUpipi', [[-1, 0, -1], [0, 1, 1]]),
    (-0.5, 'UUpipi', [[-1, 0, 1], [0, 1, -1]]),
    (0.5, 'UUpipi', [[0, 1, -1], [-1, 0, 1]]),
    (0.5, 'UUpipi', [[0, 1, 1], [-1, 0, -1]]),
]


## p111 == A1^+ \circleplus B

A_1PLUS_mom1_1_1 = [
    (-1/sqrt(3), 'pipi', [[0, -1, -1], [1, 0, 0]]),
    (-1/sqrt(3), 'pipi', [[1, -1, 0], [0, 0, -1]]),
    (-1/sqrt(3), 'pipi', [[1, 0, -1], [0, -1, 0]]),
]

A_1PLUS_mom_1_11 = [
    (-1/sqrt(3), 'pipi', [[-1, -1, 0], [0, 0, 1]]),
    (-1/sqrt(3), 'pipi', [[-1, 0, 1], [0, -1, 0]]),
    (-1/sqrt(3), 'pipi', [[0, -1, 1], [-1, 0, 0]]),
]

A_1PLUS_mom11_1 = [
    (-1/sqrt(3), 'pipi', [[0, 1, -1], [1, 0, 0]]),
    (-1/sqrt(3), 'pipi', [[1, 0, -1], [0, 1, 0]]),
    (-1/sqrt(3), 'pipi', [[1, 1, 0], [0, 0, -1]]),
]

A_1PLUS_mom_111 = [
    (-1/sqrt(3), 'pipi', [[-1, 0, 1], [0, 1, 0]]),
    (-1/sqrt(3), 'pipi', [[-1, 1, 0], [0, 0, 1]]),
    (-1/sqrt(3), 'pipi', [[0, 1, 1], [-1, 0, 0]]),
]

A_1PLUS_mom_1_1_1 = [
    (-1/sqrt(3), 'pipi', [[-1, -1, 0], [0, 0, -1]]),
    (-1/sqrt(3), 'pipi', [[-1, 0, -1], [0, -1, 0]]),
    (-1/sqrt(3), 'pipi', [[0, -1, -1], [-1, 0, 0]]),
]

A_1PLUS_mom_11_1 = [
    (-1/sqrt(3), 'pipi', [[-1, 0, -1], [0, 1, 0]]),
    (-1/sqrt(3), 'pipi', [[-1, 1, 0], [0, 0, -1]]),
    (-1/sqrt(3), 'pipi', [[0, 1, -1], [-1, 0, 0]]),
]

A_1PLUS_mom111 = [
    (-1/sqrt(3), 'pipi', [[0, 1, 1], [1, 0, 0]]),
    (-1/sqrt(3), 'pipi', [[1, 0, 1], [0, 1, 0]]),
    (-1/sqrt(3), 'pipi', [[1, 1, 0], [0, 0, 1]]),
]

A_1PLUS_mom1_11 = [
    (-1/sqrt(3), 'pipi', [[0, -1, 1], [1, 0, 0]]),
    (-1/sqrt(3), 'pipi', [[1, -1, 0], [0, 0, 1]]),
    (-1/sqrt(3), 'pipi', [[1, 0, 1], [0, -1, 0]]),
]


A_1PLUS_mom111 += [
    (-1.0, 'S_pipi', [[1, 1, 1], [0, 0, 0]]),
]

A_1PLUS_mom_1_11 += [
    (-1.0, 'S_pipi', [[-1, -1, 1], [0, 0, 0]]),
]

A_1PLUS_mom11_1 += [
    (-1.0, 'S_pipi', [[1, 1, -1], [0, 0, 0]]),
]

A_1PLUS_mom_111 += [
    (-1.0, 'S_pipi', [[-1, 1, 1], [0, 0, 0]]),
]

A_1PLUS_mom_11_1 += [
    (-1.0, 'S_pipi', [[-1, 1, -1], [0, 0, 0]]),
]

A_1PLUS_mom_1_1_1 += [
    (-1.0, 'S_pipi', [[-1, -1, -1], [0, 0, 0]]),
]

A_1PLUS_mom1_11 += [
    (-1.0, 'S_pipi', [[1, -1, 1], [0, 0, 0]]),
]

A_1PLUS_mom1_1_1 += [
    (-1.0, 'S_pipi', [[1, -1, -1], [0, 0, 0]]),
]



# next p111 irrep, B

B_1_mom11_1 = [
    (1/sqrt(2), 'pipi', [[1, 0, -1], [0, 1, 0]]),
    (-1/sqrt(2), 'pipi', [[1, 1, 0], [0, 0, -1]]),
]

B_0_mom1_11 = [
    (-1/sqrt(6), 'pipi', [[0, -1, 1], [1, 0, 0]]),
    (-1/sqrt(6), 'pipi', [[1, -1, 0], [0, 0, 1]]),
    (sqrt(2/3), 'pipi', [[1, 0, 1], [0, -1, 0]]),
]

B_0_mom_1_1_1 = [
    (sqrt(2/3), 'pipi', [[-1, -1, 0], [0, 0, -1]]),
    (-1/sqrt(6), 'pipi', [[-1, 0, -1], [0, -1, 0]]),
    (-1/sqrt(6), 'pipi', [[0, -1, -1], [-1, 0, 0]]),
]

B_1_mom_1_1_1 = [
    (-1/sqrt(2), 'pipi', [[-1, 0, -1], [0, -1, 0]]),
    (1/sqrt(2), 'pipi', [[0, -1, -1], [-1, 0, 0]]),
]

B_0_mom_1_11 = [
    (-1/sqrt(6), 'pipi', [[-1, -1, 0], [0, 0, 1]]),
    (sqrt(2/3), 'pipi', [[-1, 0, 1], [0, -1, 0]]),
    (-1/sqrt(6), 'pipi', [[0, -1, 1], [-1, 0, 0]]),
]

B_1_mom111 = [
    (-1/sqrt(2), 'pipi', [[0, 1, 1], [1, 0, 0]]),
    (1/sqrt(2), 'pipi', [[1, 0, 1], [0, 1, 0]]),
]

B_1_mom_1_11 = [
    (-1/sqrt(2), 'pipi', [[-1, -1, 0], [0, 0, 1]]),
    (1/sqrt(2), 'pipi', [[0, -1, 1], [-1, 0, 0]]),
]

B_0_mom111 = [
    (-1/sqrt(6), 'pipi', [[0, 1, 1], [1, 0, 0]]),
    (-1/sqrt(6), 'pipi', [[1, 0, 1], [0, 1, 0]]),
    (sqrt(2/3), 'pipi', [[1, 1, 0], [0, 0, 1]]),
]

B_1_mom_111 = [
    (-1/sqrt(2), 'pipi', [[-1, 0, 1], [0, 1, 0]]),
    (1/sqrt(2), 'pipi', [[0, 1, 1], [-1, 0, 0]]),
]

B_1_mom_11_1 = [
    (-1/sqrt(2), 'pipi', [[-1, 1, 0], [0, 0, -1]]),
    (1/sqrt(2), 'pipi', [[0, 1, -1], [-1, 0, 0]]),
]

B_1_mom1_1_1 = [
    (1/sqrt(2), 'pipi', [[0, -1, -1], [1, 0, 0]]),
    (-1/sqrt(2), 'pipi', [[1, -1, 0], [0, 0, -1]]),
]

B_1_mom1_11 = [
    (-1/sqrt(2), 'pipi', [[0, -1, 1], [1, 0, 0]]),
    (1/sqrt(2), 'pipi', [[1, -1, 0], [0, 0, 1]]),
]

B_0_mom_11_1 = [
    (sqrt(2/3), 'pipi', [[-1, 0, -1], [0, 1, 0]]),
    (-1/sqrt(6), 'pipi', [[-1, 1, 0], [0, 0, -1]]),
    (-1/sqrt(6), 'pipi', [[0, 1, -1], [-1, 0, 0]]),
]

B_0_mom1_1_1 = [
    (-1/sqrt(6), 'pipi', [[0, -1, -1], [1, 0, 0]]),
    (-1/sqrt(6), 'pipi', [[1, -1, 0], [0, 0, -1]]),
    (sqrt(2/3), 'pipi', [[1, 0, -1], [0, -1, 0]]),
]

B_0_mom11_1 = [
    (sqrt(2/3), 'pipi', [[0, 1, -1], [1, 0, 0]]),
    (-1/sqrt(6), 'pipi', [[1, 0, -1], [0, 1, 0]]),
    (-1/sqrt(6), 'pipi', [[1, 1, 0], [0, 0, -1]]),
]

B_0_mom_111 = [
    (-1/sqrt(6), 'pipi', [[-1, 0, 1], [0, 1, 0]]),
    (sqrt(2/3), 'pipi', [[-1, 1, 0], [0, 0, 1]]),
    (-1/sqrt(6), 'pipi', [[0, 1, 1], [-1, 0, 0]]),
]


def pol_coeff(comp):
    """Get polarization coefficients
    from center of mass momentum"""
    isnzero = int(sum([abs(i) for i in comp]))
    if isnzero == 3:
        ret = np.cross(comp, [1, 0, 0])
    elif isnzero == 2:
        assert None, "fix this"
        ret = []
    else:
        assert None, "comp should be p111 or p11"
    return list(ret)

def sumabs(momf):
    """Sum the absolute value of the momentum
    [1,-1,0] => 2
    """
    ret = em.acsum(np.abs(momf))
    return ret

def sortmom(irrvarf, irrf):
    """Enforce Luchang's condition
    that inner pions should be higher energy
    """
    ret = []
    for i in irrvarf:
        moms = list(i[2])
        if len(moms) == 2:
            if sumabs(moms[0]) > sumabs(moms[1]):
                moms[0], moms[1] = moms[1], moms[0]
                toapp = (i[0], i[1], moms)
                assert str(toapp) != str(i)
                if toapp in irrvarf:
                    ret = irrvarf
                    print(irrf, "has reverse")
                    break
            else:
                toapp = i
        ret.append(toapp)
    assert len(ret) == len(irrvarf), "bad return length:"+\
        str(ret)+" "+str(irrvarf)
    return ret

# add the rho operator via this hack
OPLIST = {}
for IRR in dir(CMOD):
    if 'mom' not in IRR:
        continue
    else:
        IRRVAR = getattr(CMOD, IRR)
        if not hasattr(IRRVAR, '__iter__'):
            continue
        IRRVAR = sortmom(IRRVAR, IRR)
        MOM = rf.mom(IRR)
        assert len(MOM) == 3, "bad momentum specified:"+str(MOM)
        for IDX in MOM:
            assert isinstance(IDX, int),\
                "momentum has non-int value:"+str(MOM)
        TOADD = [(1, 'rho', list(MOM))]
        IRRVAR.insert(0, *TOADD)
        KEY = str(IRR)+'?pol='
        TARR = [bool(IDX) for IDX in MOM]

        KEY += rho.rho_pol(IRR, MOM)

        OPLIST[KEY] = IRRVAR

AVG_ROWS = {
    'A_1PLUS_mom1': ('A_1PLUS_mom00_1',
                     'A_1PLUS_mom001',
                     'A_1PLUS_mom010',
                     'A_1PLUS_mom0_10',
                     'A_1PLUS_mom_100',
                     'A_1PLUS_mom100',),
    'B_mom1': ('B_1_mom00_1',
               'B_1_mom001',
               'B_1_mom010',
               'B_1_mom0_10',
               'B_1_mom_100',
               'B_1_mom100',
               'B_0_mom00_1',
               'B_0_mom001',
               'B_0_mom010',
               'B_0_mom0_10',
               'B_0_mom_100',
               'B_0_mom100',),
    'A_1PLUS_mom11': ('A_1PLUS_mom011',
                      'A_1PLUS_mom0_11',
                      'A_1PLUS_mom01_1',
                      'A_1PLUS_mom0_1_1',
                      'A_1PLUS_mom101',
                      'A_1PLUS_mom_101',
                      'A_1PLUS_mom10_1',
                      'A_1PLUS_mom_10_1',
                      'A_1PLUS_mom110',
                      'A_1PLUS_mom_110',
                      'A_1PLUS_mom1_10',
                      'A_1PLUS_mom_1_10',),
    'A_2PLUS_mom11': ('A_2PLUS_mom011',
                      'A_2PLUS_mom0_11',
                      'A_2PLUS_mom01_1',
                      'A_2PLUS_mom0_1_1',
                      'A_2PLUS_mom101',
                      'A_2PLUS_mom_101',
                      'A_2PLUS_mom10_1',
                      'A_2PLUS_mom_10_1',
                      'A_2PLUS_mom110',
                      'A_2PLUS_mom_110',
                      'A_2PLUS_mom1_10',
                      'A_2PLUS_mom_1_10',),
    'A_2MINUS_mom11': ('A_2MINUS_mom011',
                       'A_2MINUS_mom0_11',
                       'A_2MINUS_mom01_1',
                       'A_2MINUS_mom0_1_1',
                       'A_2MINUS_mom101',
                       'A_2MINUS_mom_101',
                       'A_2MINUS_mom10_1',
                       'A_2MINUS_mom_10_1',
                       'A_2MINUS_mom110',
                       'A_2MINUS_mom_110',
                       'A_2MINUS_mom1_10', 'A_2MINUS_mom_1_10',),
    'B_mom111': ('B_0_mom111',
                 'B_0_mom_1_1_1',
                 'B_0_mom_111',
                 'B_0_mom1_11',
                 'B_0_mom11_1',
                 'B_0_mom1_1_1',
                 'B_0_mom_11_1',
                 'B_0_mom_1_11',
                 'B_1_mom111',
                 'B_1_mom_1_1_1',
                 'B_1_mom_111',
                 'B_1_mom1_11',
                 'B_1_mom11_1',
                 'B_1_mom1_1_1',
                 'B_1_mom_11_1',
                 'B_1_mom_1_11',),
    'A_1PLUS_avg_mom111': ('A_1PLUS_mom111',
                           'A_1PLUS_mom_1_1_1',
                           'A_1PLUS_mom_111',
                           'A_1PLUS_mom1_11',
                           'A_1PLUS_mom11_1',
                           'A_1PLUS_mom1_1_1',
                           'A_1PLUS_mom_11_1',
                           'A_1PLUS_mom_1_11'),}

for IDX in AVG_ROWS:
    assert len(set(AVG_ROWS[IDX])) == len(list(AVG_ROWS[IDX])),\
        "duplicate found:"+str(AVG_ROWS[IDX])
    COUNT = 0
    for JDX in AVG_ROWS[IDX]:
        assert JDX in dir(CMOD), "unknown irrep:"+str(JDX)
        IRRVAR = getattr(CMOD, JDX)
        COUNT = len(IRRVAR) if not COUNT else COUNT
        if 'B' not in JDX:
            assert len(IRRVAR) == COUNT, "bad irrep length:"+str(JDX)+\
                " "+str(IRRVAR)
